                            ---------------------------------BIT MANIPULATION-------------------------------------
main()
{
int a=10;
if(a>100 && a++<200 && a++=12)
printf("hello %d",a);
else
printf("\n hai %d",a);
}                                           output::  hai 10


main()
{
int a=10;
if(a>100 & a++<200 & a++=12)
printf("hello %d",a);
else                                         output: hai 12
printf("\n hai %d",a);
}



main()
{
int a=10;
if(a>100 || a++<200 || a++=12)
printf("hello %d",a);
else                                        output: hello 11                       
printf("\n hai %d",a);
}



main()
{
int a=10;
if(a>100 | a++<200 | a++=12)
printf("hello %d",a);
else                                         output:  hello 12                     
printf("\n hai %d",a);
}



main()
{
a=~100;                                       n=-(n+1)    ----> -(100+1) ---> -101
printf("%d",a);
}



main()
{                 
int a=~-999;                                  output:   998
printf("%d",a);
}


//to check whether the number is even or odd using bitwise operators
main()
{
int number;
scanf("%d",&number);
if(number&1==1)
printf("odd");
else
printf("even");
}


//2nd logic for num is even or odd
main()
{
int number;
scanf("%d",&number);
if(number&1)
printf("odd");
else
printf("even");
}



//set bits logic
main()
{
	int a,count;
	printf("num:");
	scanf("%d",&a);
	while(a)
	{
		count++;
		a=a&(a-1);
	}
	printf("number of set bits:%d",count);
	
}
 //second logic
 
main()
{
	int a,count=0;
	printf("enter num:");
	scanf("%d",&a);
	while(a>0)
	{
		if(a&1)
		{
			count++;
		}
		a=a>>1;
	}
	printf("count:%d",count);
}

//smallest number greater than 'n' with exactly 1 bit difference in binary form.
#include<stdio.h>
void main()
{
	int a=14;
	printf("%d",a | a+1);
}






//checking whether the ith bit is one or not using bitwise left shift operator.

#include<stdio.h>
void main()
{
	int n,i;
	printf("enter number:");
	scanf("%d",&n);
	printf("\n enter ith bit value:");
	scanf("%d",&i);
	if(n&(1<<(i-1)))
	{
		printf("yes");
	}
	else
	{
		printf("no");
	}
}


//to check whether the number is power of 2 or not...

#include<stdio.h>
int isPowerOfTwo(int num)
{
    if(num<=0)
    {
	return 0;
    }
    return (num&(num-1))==0;
}
void main()
{
	int a;
	printf("num:");
	scanf("%d",&a);
    if(isPowerOfTwo(a))
    {
        printf("yes",a);
    }
    else
    {
        printf("no");
    }
}
 



//find the missing number in an array

main()
{
    int a[]={1,2,4,5,6,7};
    int x=0,i=0;
    for(i=0;i<=6;i++)                                          output: 3
    x=x^i;
    for(i=0;i<6-1;i++)
    x=x^a[i];
    printf("%d",x);
}





//lonely numbers in array list.

main()
{
    int a[]={1,2,1,2,3,4,3};
    int res=0,i=0;
    for(i=0;i<7;i++)                                             output: 4
    {
        res=res^a[i];
    }
    printf("%d",res);
}




//factorial of a number

#include <stdio.h>
int main() {
    int n, i;
    int fact = 1;
    printf("Enter an integer: ");
    scanf("%d", &n);                                                                        output:  5
                                                                                                      120
    if (n < 0)
        printf("Error! Factorial of a negative number doesn't exist.");
    else {
        for (i = 1; i <= n; ++i) {
            fact = fact*i;
        }
        printf("Factorial of %d = %d", n, fact);
    }
    return 0;
}


//fibanocci of a number


#include <stdio.h>
int main()
{
  int i, n;
  int t1 = 0, t2 = 1;
  int nextTerm = t1 + t2;
  printf("Enter the number of terms: ");
  scanf("%d", &n);
  printf("Fibonacci Series: %d, %d, ", t1, t2);
  for (i = 3; i <= n; ++i)
   {
    printf("%d, ", nextTerm);
    t1 = t2;
    t2 = nextTerm;
    nextTerm = t1 + t2;
  }
  return 0;
}


                            output:

              Enter the number of terms: 10
Fibonacci Series: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 

   





when there is multiplication or division,,then the tc will be the log.like log(n).. etccc..
  
1)for(i=0;i<n;i++)                  O(N)
{
for(j=0;j<n;j*=2)                 O(LOGN)         
{
//code
}
}

TIME COMPLEXITY::

O(N)+O(LOGN)====O(nlogn)

2) n=10
arr[n]_ _ _ _ _ _ _ _ _ 
based on n ..array size is declared..
so. tc will be O(N)                  //dependent on the n value.

3) n=10
arr[n]_ _ _ _ _ _ _ _ _ 
temp=n;           so another arrayy
 print(temp)
o(n)+O(n)===[two arrays]                  O[N]+O[N]=O[N]	



class A:
      pass
temp=A()                   dffrnt memory locationss

print(Temp)





























